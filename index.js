require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const express = require('express');

const bot = new Telegraf(process.env.BOT_TOKEN);
const ADMIN_ID = 477219279;
const CHANNEL_ID = '@Julii_und_Aron';

// --- –ó–∞–ª–∏—à–æ–∫ –Ω–∞–±–æ—Ä—ñ–≤ ---
let stock = 20;

// --- –¢–∏–º—á–∞—Å–æ–≤—ñ —Å—Ö–æ–≤–∏—â–∞ ---
const userLanguage = {};
const userOrders = {};
let orders = [];
const adminState = {};

// --- –¢–µ–∫—Å—Ç–∏ ---
const translations = {
  de: { order: 'üõí Bestellen f√ºr 63 ‚Ç¨' },
  en: { order: 'üõí Order for ‚Ç¨63' },
  ru: { order: 'üõí –ó–∞–∫–∞–∑–∞—Ç—å –∑–∞ 63 ‚Ç¨' }
};

const formTranslations = {
  de: {
    subscribe: 'üëâ Abonniere den Kanal, um 10% Rabatt zu erhalten und das Set f√ºr 63 ‚Ç¨ zu bekommen',
    subscribeBtn: 'üîî Abonnieren',
    checkSub: '‚úÖ Ich habe abonniert',
    notSubscribed: '‚ùå Sie haben den Kanal noch nicht abonniert. Bitte zuerst abonnieren üëÜ',
    buyNoSub: 'üí≥ Ohne Abo f√ºr 70 ‚Ç¨ kaufen',
    askName: 'Bitte geben Sie Ihren vollst√§ndigen Namen ein (Vorname + Nachname):',
    askAddress: 'Bitte geben Sie Ihre Lieferadresse ein (Land, Stadt, PLZ, Stra√üe/Haus/Wohnung):',
    askEmail: 'Bitte geben Sie Ihre E-Mail-Adresse ein:',
    askPhone: 'Bitte geben Sie Ihre Telefonnummer im internationalen Format ein (+49...):',
    askPayment: 'W√§hlen Sie die Zahlungsmethode:',
    payPaypal: 'üí≥ PayPal',
    paySepa: 'üè¶ SEPA-√úberweisung',
    successPayment: '‚úÖ Zahlung erhalten.\nIhre Bestellung wird morgen versendet.\nDie Sendungsnummer erhalten Sie in diesem Chat.',
    confirmSent: "‚úÖ Danke! Ihre Best√§tigung wurde an den Administrator gesendet.",
    noActiveOrder: "‚ö†Ô∏è Sie haben keine aktive Bestellung. Bitte zuerst bestellen.",
    sepa: (price) => `
üë§ Empf√§nger: Iuliia Troshina
üè¶ IBAN: DE77 7505 0000 0027 9627 45
üîë BIC: BYLADEM1RBG
üí∂ Betrag: ${price} ‚Ç¨
üìå Verwendungszweck: Julii & Aron Bestellung ${price}`
  },
  en: {
    subscribe: 'üëâ Subscribe to the channel to get 10% off and grab the set for ‚Ç¨63',
    subscribeBtn: 'üîî Subscribe',
    checkSub: '‚úÖ I subscribed',
    notSubscribed: '‚ùå You are not subscribed yet. Please subscribe first üëÜ',
    buyNoSub: 'üí≥ Buy without subscription for ‚Ç¨70',
    askName: 'Please enter your full name (First + Last):',
    askAddress: 'Please enter your delivery address (Country, City, Zip, Street/House/Apartment):',
    askEmail: 'Please enter your email:',
    askPhone: 'Please enter your phone number in international format (+44...):',
    askPayment: 'Choose payment method:',
    payPaypal: 'üí≥ PayPal',
    paySepa: 'üè¶ SEPA Transfer',
    successPayment: '‚úÖ Payment received.\nYour order will be shipped tomorrow.\nThe tracking number will be sent to this chat.',
    confirmSent: "‚úÖ Thank you! Your confirmation has been sent to the administrator.",
    noActiveOrder: "‚ö†Ô∏è You don‚Äôt have an active order. Please place an order first.",
    sepa: (price) => `
üë§ Recipient: Iuliia Troshina
üè¶ IBAN: DE77 7505 0000 0027 9627 45
üîë BIC: BYLADEM1RBG
üí∂ Amount: ${price} ‚Ç¨
üìå Purpose: Julii & Aron order ${price}`
  },
  ru: {
    subscribe: 'üëâ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É 10% –∏ –∑–∞–±—Ä–∞—Ç—å –Ω–∞–±–æ—Ä –∑–∞ 63 ‚Ç¨',
    subscribeBtn: 'üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
    checkSub: '‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è',
    notSubscribed: '‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å üëÜ',
    buyNoSub: 'üí≥ –ö—É–ø–∏—Ç—å –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 70 ‚Ç¨',
    askName: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:',
    askAddress: '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥, –ò–Ω–¥–µ–∫—Å, –£–ª–∏—Ü–∞/–¥–æ–º/–∫–≤.):',
    askEmail: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:',
    askPhone: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (+7...):',
    askPayment: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:',
    payPaypal: 'üí≥ PayPal',
    paySepa: 'üè¶ SEPA-–ø–µ—Ä–µ–≤–æ–¥',
    successPayment: '‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞.\n–í–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–≤—Ç—Ä–∞.\n–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä –ø—Ä–∏–¥—ë—Ç –≤ —ç—Ç–æ—Ç —á–∞—Ç.',
    confirmSent: "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
    noActiveOrder: "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑.",
    sepa: (price) => `
üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: Iuliia Troshina
üè¶ IBAN: DE77 7505 0000 0027 9627 45
üîë BIC: BYLADEM1RBG
üí∂ –°—É–º–º–∞: ${price} ‚Ç¨
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: Julii & Aron –∑–∞–∫–∞–∑ ${price}`
  }
};

// --- –°—Ç–∞—Ä—Ç ---
bot.start((ctx) => {
  if (ctx.from.id === ADMIN_ID) {
      return ctx.reply("üë©‚Äçüíª –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", Markup.keyboard([
        ["üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞"],
        ["üöö –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä", "üìä –û—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞"]
      ]).resize());
  }

  ctx.reply(
    '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üëã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Hi üëã Please choose a language / Hallo üëã Bitte w√§hlen Sie eine Sprache',
    Markup.inlineKeyboard([
      [Markup.button.callback('üá©üá™ Deutsch', 'lang_de')],
      [Markup.button.callback('üá¨üáß English', 'lang_en')],
      [Markup.button.callback('üá∑üá∫ –†—É—Å—Å–∫–∏–π', 'lang_ru')]
    ])
  );
});

// --- –§–æ—Ç–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è ---
bot.on("photo", async (ctx) => {
  const order = orders.find(o => o.userId === ctx.from.id);
  const lang = userLanguage[ctx.from.id] || "en";

  if (!order) return ctx.reply(formTranslations[lang].noActiveOrder);

  const photo = ctx.message.photo[ctx.message.photo.length - 1].file_id;
  await ctx.telegram.sendPhoto(
    ADMIN_ID,
    photo,
    { caption: `üì∑ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã\nüÜî Order: ${order.id}\nüë§ ${order.data.name}` }
  );
  ctx.reply(formTranslations[lang].confirmSent);
});

// --- –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å ---
bot.hears("üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤", (ctx) => {
  if (orders.length === 0) return ctx.reply("‚ÑπÔ∏è –ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç");
  let list = orders.map(o => `üÜî ${o.id} | ${o.data.name} | ${o.data.price}‚Ç¨`).join("\n");
  ctx.reply(`üìã –ó–∞–∫–∞–∑—ã:\n${list}\n\n–û—Å—Ç–∞—Ç–æ–∫: ${stock}`);
});

bot.hears("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞", (ctx) => {
  ctx.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±–æ—Ä–æ–≤:");
  adminState[ctx.from.id] = "update_stock";
});

bot.hears("üöö –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä", (ctx) => {
  ctx.reply("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞:");
  adminState[ctx.from.id] = "enter_orderId";
});

bot.hears("üìä –û—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞", (ctx) => {
  ctx.reply(`üìä –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: ${stock}`);
});

// --- –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—ñ–≤ ---
bot.on("text", (ctx) => {
  // –Ø–∫—â–æ –∞–¥–º—ñ–Ω
  if (ctx.from.id === ADMIN_ID) {
    const state = adminState[ctx.from.id];

    if (state === "update_stock") {
      const newStock = parseInt(ctx.message.text);
      if (!isNaN(newStock) && newStock >= 0) {
        stock = newStock;
        ctx.reply(`‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±–æ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${stock}`);
      } else {
        ctx.reply("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ");
      }
      adminState[ctx.from.id] = null;
      return;
    }

    if (state === "enter_orderId") {
      const orderId = ctx.message.text;
      ctx.reply("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä:");
      adminState[ctx.from.id] = { step: "enter_tracking", orderId };
      return;
    }

    if (state?.step === "enter_tracking") {
      const trackNumber = ctx.message.text;
      const order = orders.find(o => o.id === state.orderId);
      if (order) {
        bot.telegram.sendMessage(order.userId, `üì¶ –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä: ${trackNumber}`);
        ctx.reply(`‚úÖ –¢—Ä–µ–∫-–Ω–æ–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É (${order.id})`);
      } else {
        ctx.reply("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω");
      }
      adminState[ctx.from.id] = null;
      return;
    }
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á ‚Äî –π–¥–µ –ª–æ–≥—ñ–∫–∞ —Ñ–æ—Ä–º–∏
  const order = userOrders[ctx.from.id];
  if (!order) return;
  const lang = order.lang;
  const text = ctx.message.text.trim();

  switch (order.step) {
    case 'name':
      if (text.split(" ").length < 2) {
        return ctx.reply("‚ùå Name must contain at least 2 words / –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–ª–æ–≤–∞ / –Ü–º‚Äô—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 2 —Å–ª–æ–≤–∞");
      }
      order.data.name = text;
      order.step = 'address';
      ctx.reply(formTranslations[lang].askAddress);
      break;
    case 'address':
      order.data.address = text;
      order.step = 'email';
      ctx.reply(formTranslations[lang].askEmail);
      break;
    case 'email':
      if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(text)) {
        return ctx.reply("‚ùå Invalid email / –ù–µ–≤–µ—Ä–Ω—ã–π email / –ù–µ–≤—ñ—Ä–Ω–∞ –∞–¥—Ä–µ—Å–∞ –ø–æ—à—Ç–∏");
      }
      order.data.email = text;
      order.step = 'phone';
      ctx.reply(formTranslations[lang].askPhone);
      break;
    case 'phone':
      if (!/^\+\d{7,15}$/.test(text)) {
        return ctx.reply("‚ùå Invalid phone format. Example: +491234567890 / –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü—Ä–∏–º–µ—Ä: +79123456789 / –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω—É. –ü—Ä–∏–∫–ª–∞–¥: +380931234567");
      }
      order.data.phone = text;
      order.step = 'payment';
      ctx.reply(formTranslations[lang].askPayment, Markup.inlineKeyboard([
        [Markup.button.callback(formTranslations[lang].payPaypal, 'pay_paypal')],
        [Markup.button.callback(formTranslations[lang].paySepa, 'pay_sepa')]
      ]));
      break;
  }
});

// --- Express ---
const app = express();
app.use(express.json());
app.use(bot.webhookCallback('/webhook'));
bot.telegram.setWebhook(process.env.WEBHOOK_URL + '/webhook');
app.get('/', (req, res) => res.send('Bot is running üöÄ'));
app.listen(process.env.PORT || 8080, () => {
  console.log('Server running on port', process.env.PORT || 8080);
});
